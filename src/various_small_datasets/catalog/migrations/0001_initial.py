# Generated by Django 2.0.2 on 2018-04-23 11:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataSet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('database', models.CharField(max_length=128, null=True)),
                ('schema', models.CharField(max_length=128, null=True)),
                ('table_name', models.CharField(max_length=128)),
                ('ordering', models.CharField(max_length=128, null=True)),
                ('enable_api', models.BooleanField()),
                ('name_field', models.CharField(max_length=128, null=True)),
                ('geometry_field', models.CharField(max_length=128, null=True)),
                ('geometry_type', models.CharField(max_length=32)),
                ('enable_geosearch', models.BooleanField()),
                ('enable_maplayer', models.BooleanField()),
                ('map_template', models.CharField(max_length=128, null=True)),
                ('map_title', models.CharField(max_length=128, null=True)),
                ('map_abstract', models.CharField(max_length=128, null=True)),
            ],
            options={
                'db_table': 'cat_dataset',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataSetField',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('data_type', models.CharField(max_length=128)),
                ('db_column', models.CharField(max_length=128, null=True)),
                ('primary_key', models.BooleanField(default=False)),
                ('unique', models.BooleanField(default=False)),
                ('max_length', models.PositiveSmallIntegerField(null=True)),
                ('blank', models.BooleanField(default=False)),
                ('null', models.BooleanField(default=False)),
                ('max_digits', models.PositiveSmallIntegerField(null=True)),
                ('decimal_places', models.PositiveSmallIntegerField(null=True)),
                ('srid', models.IntegerField(null=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.DataSet')),
            ],
            options={
                'db_table': 'cat_dataset_fields',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MapLayer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('title', models.CharField(max_length=128)),
                ('abstract', models.CharField(max_length=128, null=True)),
                ('filter', models.CharField(max_length=128, null=True)),
                ('color', models.CharField(max_length=11, null=True)),
                ('style', models.TextField(null=True)),
                ('minscale', models.PositiveIntegerField(null=True)),
                ('maxscale', models.PositiveIntegerField(null=True)),
                ('label', models.CharField(max_length=128, null=True)),
                ('label_minscale', models.PositiveIntegerField(null=True)),
                ('label_maxscale', models.PositiveIntegerField(null=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.DataSet')),
            ],
            options={
                'db_table': 'cat_maplayer',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.AlterUniqueTogether(
            name='datasetfield',
            unique_together={('dataset', 'name')},
        ),
    ]
